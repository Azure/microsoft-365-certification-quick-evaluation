/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { ReportResource as ReportResourceMapper, ReportResourcePatch as ReportResourcePatchMapper, SnapshotDownloadRequest as SnapshotDownloadRequestMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2022-11-16-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const skipToken = {
    parameterPath: ["options", "skipToken"],
    mapper: {
        serializedName: "$skipToken",
        type: {
            name: "String"
        }
    }
};
export const top = {
    parameterPath: ["options", "top"],
    mapper: {
        constraints: {
            InclusiveMaximum: 100,
            InclusiveMinimum: 1
        },
        serializedName: "$top",
        type: {
            name: "Number"
        }
    }
};
export const select = {
    parameterPath: ["options", "select"],
    mapper: {
        constraints: {
            MinLength: 1
        },
        serializedName: "$select",
        type: {
            name: "String"
        }
    }
};
export const offerGuid = {
    parameterPath: ["options", "offerGuid"],
    mapper: {
        constraints: {
            MinLength: 1
        },
        serializedName: "offerGuid",
        type: {
            name: "String"
        }
    }
};
export const reportCreatorTenantId = {
    parameterPath: ["options", "reportCreatorTenantId"],
    mapper: {
        constraints: {
            MinLength: 1
        },
        serializedName: "reportCreatorTenantId",
        type: {
            name: "String"
        }
    }
};
export const reportName = {
    parameterPath: "reportName",
    mapper: {
        constraints: {
            Pattern: new RegExp("^[-a-zA-Z0-9_]+$")
        },
        serializedName: "reportName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const parameters = {
    parameterPath: "parameters",
    mapper: ReportResourceMapper
};
export const parameters1 = {
    parameterPath: "parameters",
    mapper: ReportResourcePatchMapper
};
export const snapshotName = {
    parameterPath: "snapshotName",
    mapper: {
        serializedName: "snapshotName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters2 = {
    parameterPath: "parameters",
    mapper: SnapshotDownloadRequestMapper
};
//# sourceMappingURL=parameters.js.map