import { Snapshot } from "../operationsInterfaces";
import { AppComplianceAutomationToolForMicrosoft365 } from "../appComplianceAutomationToolForMicrosoft365";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { SnapshotGetOptionalParams, SnapshotGetResponse, SnapshotDownloadRequest, SnapshotDownloadOptionalParams, SnapshotDownloadResponse } from "../models";
/** Class containing Snapshot operations. */
export declare class SnapshotImpl implements Snapshot {
    private readonly client;
    /**
     * Initialize a new instance of the class Snapshot class.
     * @param client Reference to the service client
     */
    constructor(client: AppComplianceAutomationToolForMicrosoft365);
    /**
     * Get the AppComplianceAutomation snapshot and its properties.
     * @param reportName Report Name.
     * @param snapshotName Snapshot Name.
     * @param options The options parameters.
     */
    get(reportName: string, snapshotName: string, options?: SnapshotGetOptionalParams): Promise<SnapshotGetResponse>;
    /**
     * Download compliance needs from snapshot, like: Compliance Report, Resource List.
     * @param reportName Report Name.
     * @param snapshotName Snapshot Name.
     * @param parameters Parameters for the query operation
     * @param options The options parameters.
     */
    beginDownload(reportName: string, snapshotName: string, parameters: SnapshotDownloadRequest, options?: SnapshotDownloadOptionalParams): Promise<PollerLike<PollOperationState<SnapshotDownloadResponse>, SnapshotDownloadResponse>>;
    /**
     * Download compliance needs from snapshot, like: Compliance Report, Resource List.
     * @param reportName Report Name.
     * @param snapshotName Snapshot Name.
     * @param parameters Parameters for the query operation
     * @param options The options parameters.
     */
    beginDownloadAndWait(reportName: string, snapshotName: string, parameters: SnapshotDownloadRequest, options?: SnapshotDownloadOptionalParams): Promise<SnapshotDownloadResponse>;
}
//# sourceMappingURL=snapshot.d.ts.map